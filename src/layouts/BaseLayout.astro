---
import BaseHead from "../components/BaseHead.astro";
const { title, description, image } = Astro.props;
---

<!doctype html>
<html lang="en" class="h-full antialiased">
  <head>
    <BaseHead title={title} description={description} image={image} />

    <script is:inline>
      let dark = false;
      if (localStorage.getItem("darkMode")) {
        dark = JSON.parse(localStorage.getItem("darkMode") ?? "false");
      } else {
        dark = window.matchMedia("(prefers-color-scheme: dark)").matches;
      }

      var root = document.getElementsByTagName("html")[0];
      if (dark) {
        root.classList.add("dark");
      } else {
        root.classList.remove("dark");
      }
    </script>

    <style is:global>
      :root {
        --bg: #f1f8f5;
        --fg: #0b3d2e;
        --fg-rgb: 11 61 46;
        --bg-rgb: 241 248 245;
      }
      
      html.dark {
        --bg: #0b3d2e;
        --fg: #f1f8f5;
        --fg-rgb: 241 248 245;
        --bg-rgb: 11 61 46;
      }
      
      html.dark .astro-code,
      html.dark .astro-code span {
        color: var(--shiki-dark);
      }

      html:not(dark) .astro-code,
      html:not(dark) .astro-code span {
        color: var(--shiki-light);
      }

      pre {
        @apply overflow-hidden !important;
        border: 1px solid rgb(var(--fg-rgb) / 0.2) !important;
        background-color: rgb(var(--bg-rgb) / 0.5) !important;
        @apply rounded-xl !important;
      }

      .line.highlighted {
        margin: 0 -24px;
        padding: 0 24px;
        position: relative;

        display: inline-block;
        width: calc(100% + 48px);
      }
      .line.highlighted {
        background-color: rgb(var(--fg-rgb) / 0.1);
      }

      ::selection {
        background-color: rgb(var(--fg-rgb) / 0.2);
      }

      lite-youtube {
        @apply rounded-xl;
        border: 1px solid rgb(var(--fg-rgb) / 0.2);
      }

      .prose mark {
        background-color: rgb(var(--fg-rgb) / 0.2);
        color: var(--fg);
      }
      .MathJax svg {
        display: inline !important;
      }
    </style>
  </head>

  <body
    class="bg-[var(--bg)] text-[var(--fg)] flex mx-1 sm:mx-4 transition-all duration-150"
  >
    <div class="max-w-4xl mx-auto my-1 sm:my-8 w-full">
      <div class="w-full">
        <slot />
      </div>
    </div>

    <!-- <div class="fixed inset-0 h-full w-full -z-50">
      <div
        class="h-full w-full max-w-5xl mx-auto bg-base-50 ring-1 ring-base-200 dark:bg-base-900 dark:ring-base-300/20 shadow-lg"
      >
      </div>
    </div> -->
  </body>
</html>
